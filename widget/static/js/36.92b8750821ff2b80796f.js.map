{"version":3,"sources":["webpack:///src/views/chat/messagebox.vue","webpack:///./src/views/chat/messagebox.vue?ca7a","webpack:///./src/views/chat/messagebox.vue"],"names":["messagebox","components","Nothing","mounted","_this","this","asyncToGenerator_default","regenerator_default","a","mark","_callee","wrap","_context","prev","next","onGetContactUserList","getFriends","console","log","friendList","stop","computed","extends_default","Object","vuex_esm","contact","msgList","userList","filter","item","group","chatroom","chatList","$store","state","chat","getKey","key","type","name","groupid","id","username","$route","query","data","root","friends","props","methods","renderTime","time","nowStr","Date","localStr","moment_default","format","getLastMsg","currentMsgs","touser","lastMsg","lastType","length","filename","msg","msgTime","select2","$router","push","getUnreadNum","_$route","unReadNum","params","forEach","status","bySelf","init","_this2","$ajax","post","url","userphone","then","result","filters","avatar","charAt","chat_messagebox","render","_vm","_h","$createElement","_c","_self","staticClass","_e","_v","_l","on","click","$event","_s","_f","attrs","src","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/36.92b8750821ff2b80796f.js","sourcesContent":["<template>\r\n<div class=\"messagebox-container\">\r\n  <Nothing v-if=\"!userList['contact'].length\"></Nothing>\r\n  <div\r\n    class=\"item\"\r\n    v-for=\"(item) in friendList\"\r\n    @click=\"select2(item)\">\r\n    <div  v-if=\"!item.avatar\" class=\"avatar\">\r\n      <span class=\"avatar-span\">{{item.username|avatar}}</span>\r\n    </div>\r\n    <img class=\"avatar\" v-if=\"item.avatar\" :src=\"item.avatar\"/>\r\n    <div class=\"message-container\">\r\n      <div class=\"message-info\">\r\n        <div>\r\n          <!-- <span class=\"message-name\">{{item.name}}</span> -->\r\n          <span class=\"message-name\">{{item.username}}</span>\r\n          <div class=\"icon-style\" v-if=\"getUnreadNum(item) != 0\">\r\n            <span class=\"unreadNum\">{{getUnreadNum(item)}}</span>\r\n          </div>\r\n        </div>\r\n        <span class=\"time-style\">{{getLastMsg(item).msgTime}}</span>\r\n      </div>\r\n      <div class=\"message-detail\">{{getLastMsg(item).lastMsg}}</div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapState, mapActions,mapGetters } from 'vuex'\r\nimport moment from 'moment'\r\nimport Nothing from '../../components/nothing'\r\nexport default {\r\n  components: { Nothing },\r\n  async mounted () {\r\n    this.onGetContactUserList()\r\n    await this.getFriends()\r\n    // this.init()\r\n    console.log(this.friendList)\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      contact: 'onGetContactUserList',\r\n      msgList: 'onGetCurrentChatObjMsg',\r\n      friendList: 'friends'\r\n    // group: \"onGetGroupUserList\",\r\n    // chatroom: \"onGetChatroomUserList\",\r\n    }),\r\n    userList () {\r\n      return {\r\n        contact: this.contact.filter(item => {\r\n          if (item) {\r\n            return item\r\n          }\r\n        }),\r\n        group: this.group,\r\n        chatroom: this.chatroom\r\n      }\r\n    },\r\n    chatList () {\r\n      return this.$store.state.chat.msgList\r\n    },\r\n    getKey (item) {\r\n      let key = \"\"\r\n      switch (this.type) {\r\n        case 'contact':\r\n          key = item.name\r\n          break\r\n        case 'group':\r\n          key = item.groupid\r\n          break\r\n        case 'chatroom':\r\n          key = item.id\r\n          break\r\n        default:\r\n          break\r\n      }\r\n      return key;\r\n    },\r\n    username () {\r\n      return this.$route.query.username\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      root: process.env.API_HOST,\r\n      friends: []\r\n    }\r\n  },\r\n  props: [\r\n    'type' // 聊天类型 contact, group, chatroom\r\n  ],\r\n  methods: {\r\n    ...mapActions(['onLogout', 'onGetFirendBlack', 'onGetContactUserList', 'getFriends']),\r\n    renderTime (time) {\r\n      const nowStr = new Date()\r\n      const localStr = time ? new Date(time) : nowStr\r\n      const localMoment = moment(localStr)\r\n      const localFormat = localMoment.format('MM-DD hh:mm A')\r\n      return localFormat\r\n    },\r\n    getLastMsg (item) {\r\n      // let { name, params } = this.$route;\r\n      let  name = 'contact'\r\n      const chatList = this.chatList[name]\r\n      const userId = item.touser\r\n      const currentMsgs = chatList[userId] || []\r\n      let lastMsg = ''\r\n      let lastType =\r\n        currentMsgs.length && currentMsgs[currentMsgs.length - 1].type\r\n      if (currentMsgs.length) {\r\n        if (lastType === 'img') {\r\n          lastMsg = '[image]'\r\n        } else if (lastType === 'file') {\r\n          lastMsg = currentMsgs[currentMsgs.length - 1].filename\r\n        } else if (lastType === 'audio') {\r\n          lastMsg = '[audio]'\r\n        } else if (lastType === 'vidio') {\r\n          lastMsg = '[vidio]'\r\n        } else {\r\n          lastMsg = currentMsgs[currentMsgs.length - 1].msg\r\n        }\r\n      }\r\n      const msgTime = currentMsgs.length\r\n        ? this.renderTime(currentMsgs[currentMsgs.length - 1].time)\r\n        : \"\"\r\n      return {\r\n        lastMsg,\r\n        msgTime\r\n      }\r\n    },\r\n    select2 (item) {\r\n      // this.$router.push(`/chat/message/${item.name}/${this.username}`)\r\n      this.$router.push(`/chat/message/${item.touser}/${this.username}/${item.username}`)\r\n    },\r\n    getUnreadNum (item) {\r\n      const { name, params } = this.$route\r\n      const chatList = this.chatList['contact']\r\n      let userId = item.touser\r\n      const currentMsgs = chatList[userId] || []\r\n      let unReadNum = 0\r\n      currentMsgs.forEach(msg => {\r\n        if (msg.status !== \"read\" && msg.status !== \"recall\" && !msg.bySelf) {\r\n          unReadNum++;\r\n        }\r\n      });\r\n      return unReadNum\r\n    },\r\n    init () {\r\n      this.$ajax.post({\r\n        url: this.root + 'chat/selectFriends',\r\n        data: {\r\n          userphone: this.username\r\n        }\r\n      }).then(result => {\r\n        if (result.status) {\r\n          this.friends = result.result\r\n        } else {\r\n        }\r\n      })\r\n    }\r\n  },\r\n  filters: {\r\n    avatar (name) {\r\n      return name.charAt(name.length - 1)\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.messagebox-container{\r\n  margin-top: 80px;\r\n  height: 100%;\r\n}\r\n.item {\r\n  height: 70px;\r\n  border-bottom: 1px lightgray solid;\r\n  display: flex;\r\n  align-items: center;\r\n  background: white;\r\n}\r\n.avatar{\r\n  width: 50px;\r\n  height: 50px;\r\n  background-color: #3396FB;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n}\r\n.avatar-span{\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n.message-info{\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0 10px;\r\n  width: 100%;\r\n}\r\n.message-container{\r\n  width: 80%;\r\n  height: 40px;\r\n  overflow: hidden;\r\n}\r\n.message-detail{\r\n  margin-left: 10px;\r\n  mask-type: 10px;\r\n  opacity: 0.6;\r\n}\r\n.message-name{\r\n  font-size: 16px;\r\n  \r\n}\r\n.icon-style {\r\n  display: inline-block;\r\n  background-color: #f04134;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  color: white;\r\n  line-height: 1.5;\r\n  text-align: center;\r\n}\r\n\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/views/chat/messagebox.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"messagebox-container\"},[(!_vm.userList['contact'].length)?_c('Nothing'):_vm._e(),_vm._v(\" \"),_vm._l((_vm.friendList),function(item){return _c('div',{staticClass:\"item\",on:{\"click\":function($event){return _vm.select2(item)}}},[(!item.avatar)?_c('div',{staticClass:\"avatar\"},[_c('span',{staticClass:\"avatar-span\"},[_vm._v(_vm._s(_vm._f(\"avatar\")(item.username)))])]):_vm._e(),_vm._v(\" \"),(item.avatar)?_c('img',{staticClass:\"avatar\",attrs:{\"src\":item.avatar}}):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"message-container\"},[_c('div',{staticClass:\"message-info\"},[_c('div',[_c('span',{staticClass:\"message-name\"},[_vm._v(_vm._s(item.username))]),_vm._v(\" \"),(_vm.getUnreadNum(item) != 0)?_c('div',{staticClass:\"icon-style\"},[_c('span',{staticClass:\"unreadNum\"},[_vm._v(_vm._s(_vm.getUnreadNum(item)))])]):_vm._e()]),_vm._v(\" \"),_c('span',{staticClass:\"time-style\"},[_vm._v(_vm._s(_vm.getLastMsg(item).msgTime))])]),_vm._v(\" \"),_c('div',{staticClass:\"message-detail\"},[_vm._v(_vm._s(_vm.getLastMsg(item).lastMsg))])])])})],2)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5bb79407\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/chat/messagebox.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5bb79407\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./messagebox.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./messagebox.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./messagebox.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5bb79407\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./messagebox.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-5bb79407\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/chat/messagebox.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}